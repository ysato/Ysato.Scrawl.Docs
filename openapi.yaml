openapi: 3.0.3
info:
  title: Scrawl API
  version: 0.1.0
  description: ScrawlのAPI仕様書です。
servers:
  - url: http://localhost:8000/api # 開発環境のベースURL例
    description: Development server

paths:
  /threads:
    get:
      summary: スレッド一覧取得
      operationId: getThreads
      tags:
        - Threads
      parameters:
        - in: query
          name: cursor
          schema:
            type: string
          required: false
          description: ページネーション用のカーソル
      responses:
        '200':
          description: スレッド一覧
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - $ref: '#/components/schemas/PaginationMeta'
                  - properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/ThreadListItem'

    post:
      summary: 新規スレッド作成
      operationId: createThread
      tags:
        - Threads
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
              properties:
                title:
                  type: string
                  description: スレッドのタイトル
                  maxLength: 255
                  example: 初めてのスレッド
      responses:
        '201':
          description: Thread created successfully
          headers:
            Location:
              description: 作成されたスレッドのURL
              schema:
                type: string
                format: uri-reference
                example: /threads/101
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thread'
        '422':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /threads/{threadId}:
    get:
      summary: スレッド詳細取得
      operationId: getThreadById
      tags:
        - Threads
      parameters:
        - in: path
          name: threadId
          schema:
            type: integer
          required: true
          description: スレッドID
      responses:
        '200':
          description: スレッド詳細と関連するスクラッチ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadDetail'
        '404':
          $ref: '#/components/responses/NotFound'

    put:
      summary: スレッド更新
      operationId: updateThread
      tags:
        - Threads
      parameters:
        - in: path
          name: threadId
          schema:
            type: integer
          required: true
          description: 更新対象のスレッドID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Thread'
      responses:
        '204':
          description: Thread updated successfully (No Content)
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/ValidationError'

    delete:
      summary: スレッド削除
      operationId: deleteThread
      tags:
        - Threads
      parameters:
        - in: path
          name: threadId
          schema:
            type: integer
          required: true
          description: 削除対象のスレッドID
      responses:
        '204':
          description: Thread deleted successfully (No Content)
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFound'

  /threads/{threadId}/scratches:
    post:
      summary: スクラッチ追加
      operationId: addScratch
      tags:
        - Scratches
      parameters:
        - in: path
          name: threadId
          schema:
            type: integer
          required: true
          description: スクラッチを追加するスレッドID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
                  description: スクラッチの本文 (Markdown)
                  example: これは新しいコメントです。
      responses:
        '201':
          description: Scratch added successfully
          headers:
            Location:
              description: 作成されたスクラッチのURL
              schema:
                type: string
                format: uri-reference
                example: /threads/101/scratches/201
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scratch'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError' # スレッド作成者以外がコメントしようとした場合
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/ValidationError'

  /threads/{threadId}/scratches/{scratchId}:
    put:
      summary: スクラッチ更新
      operationId: updateScratch
      tags:
        - Scratches
      parameters:
        - in: path
          name: threadId
          schema:
            type: integer
          required: true
          description: 更新対象のスレッドID
        - in: path
          name: scratchId
          schema:
            type: integer
          required: true
          description: 更新対象のスクラッチID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scratch'
      responses:
        '204':
          description: Scratch updated successfully (No Content)
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/ValidationError'

    delete:
      summary: スクラッチ削除
      operationId: deleteScratch
      tags:
        - Scratches
      parameters:
        - in: path
          name: threadId
          schema:
            type: integer
          required: true
          description: 削除対象のスレッドID
        - in: path
          name: scratchId
          schema:
            type: integer
          required: true
          description: 削除対象のスクラッチID
      responses:
        '204':
          description: Scratch deleted successfully (No Content)
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFound'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: testuser
      # emailなどのフィールドは最小構成のため省略

    Thread:
      type: object
      properties:
        id:
          type: integer
          example: 101
        user_id:
          type: integer
          example: 1
        title:
          type: string
          example: 技術ブログの記事構成について
        is_closed:
          type: boolean
          description: 'トピックの進行状況 (true: Closed, false: Open)'
          example: false
        created_at:
          type: string
          format: date-time
          example: '2025-05-30T10:00:00Z'
        last_scratch_created_at:
          type: string
          format: date-time
          nullable: true
          example: '2025-05-30T10:30:00Z'
        last_closed_at:
          type: string
          format: date-time
          nullable: true
          example: '2025-05-30T11:00:00Z'
      # updated_at は Laravel のタイムスタンプ管理に任せる

    Scratch:
      type: object
      properties:
        id:
          type: integer
          example: 201
        thread_id:
          type: integer
          example: 101
        content:
          type: string
          description: スクラッチ本文 (Markdown)
          example: |
            ## コメント1
            これはMarkdown形式のコメントです。

            - リストアイテム1
            - リストアイテム2

            ```python
            print("Hello, World!")
            ```
        created_at:
          type: string
          format: date-time
          example: '2025-05-30T10:15:00Z'
        updated_at:
          type: string
          format: date-time
          example: '2025-05-30T10:45:00Z'

    ThreadDetail:
      allOf:
        - $ref: '#/components/schemas/Thread'
        - type: object
          properties:
            scratches:
              type: array
              items:
                $ref: '#/components/schemas/Scratch'
              description: このスレッドに属するスクラッチ (古いものが上)
            user:
              allOf:
                - $ref: '#/components/schemas/User'
              description: スレッドの作成者情報

    ThreadListItem:
      allOf:
        - $ref: '#/components/schemas/Thread'
        - type: object
          properties:
            scratches_count:
              type: integer
              example: 31
              description: このスレッドに属するスクラッチの数
            user:
              allOf:
                - $ref: '#/components/schemas/User'
              description: スレッドの作成者情報

    PaginationMeta:
      type: object
      properties:
        self:
          type: string
          nullable: true
          format: uri|cursor
        prev:
          type: string
          nullable: true
          format: uri|cursor
        next:
          type: string
          nullable: true
          format: uri|cursor

  responses:
    UnauthorizedError:
      description: 認証が必要です (トークンなし、または無効なトークン)
      content:
        application/problem+json:
          schema:
            type: object
            required: [ title, instance ]
            properties:
              title:
                type: string
                example: Unauthenticated.
              instance:
                type: string
                format: uri-reference
                example: /aaa/bbb/ccc
    ForbiddenError:
      description: 権限がありません (リソースの作成者ではないなど)
      content:
        application/problem+json:
          schema:
            type: object
            required: [ title, instance ]
            properties:
              title:
                type: string
                example: This action is unauthorized.
              instance:
                type: string
                format: uri-reference
                example: /aaa/bbb/ccc
    NotFound:
      description: リソースが見つかりません
      content:
        application/problem+json:
          schema:
            type: object
            required: [ title, instance ]
            properties:
              title:
                type: string
                example: Resource not found.
              instance:
                type: string
                format: uri-reference
                example: /aaa/bbb/ccc
    ValidationError:
      description: リクエストの入力値が不正です
      content:
        application/problem+json:
          schema:
            type: object
            required: [ title, instance, errors ]
            properties:
              title:
                type: string
                example: The given data was invalid.
              instance:
                type: string
                format: uri-reference
                example: /aaa/bbb/ccc
              errors:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
                example:
                  title: [ "The title field is required." ]
                  content: [ "The content field must be at least 10 characters." ]
